{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Documents\\\\prograns\\\\web\\\\quickLinks\\\\quick-links\\\\src\\\\features\\\\linkItemSearch\\\\LinkItemSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../features/linkItemSearch/LinkItemSearchStyle.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSearchText, updateSearchText } from '../linkItemSearch/linkItemSearchSlice';\nimport { forceItemListStateChange, toggleDisplayFav } from '../navBarList/navBarSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LinkItemSearch = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const text = useSelector(selectSearchText);\n\n  const onChangeText = _ref => {\n    let {\n      target\n    } = _ref;\n    dispatch(updateSearchText(target.value)); // force re-render on navLinkList by changing its state and making the list items pass through the filter\n\n    dispatch(forceItemListStateChange());\n  };\n\n  const toggleDisplayFavHandler = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    dispatch(toggleDisplayFav(target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linkItemSearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeText,\n      className: \"linkItemSearchInput\",\n      value: text,\n      placeholder: \"Search \",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      onChange: toggleDisplayFavHandler,\n      className: \"linkItemSearchLable\",\n      children: \"favorites only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"linkItemSearchFavToggle\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LinkItemSearch, \"Cfstai8xnJUL2M2SBTDZd+vrRBM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LinkItemSearch;\nexport default LinkItemSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkItemSearch\");","map":{"version":3,"names":["React","useDispatch","useSelector","selectSearchText","updateSearchText","forceItemListStateChange","toggleDisplayFav","LinkItemSearch","dispatch","text","onChangeText","target","value","toggleDisplayFavHandler"],"sources":["C:/Users/Aaron/Documents/prograns/web/quickLinks/quick-links/src/features/linkItemSearch/LinkItemSearch.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport '../../features/linkItemSearch/LinkItemSearchStyle.css'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSearchText, updateSearchText } from '../linkItemSearch/linkItemSearchSlice'\r\nimport { forceItemListStateChange, toggleDisplayFav } from '../navBarList/navBarSlice'\r\n\r\nconst LinkItemSearch = () => {\r\n  const dispatch = useDispatch()  \r\n  const text = useSelector(selectSearchText)\r\n\r\n  const onChangeText = ({ target }) => {\r\n    dispatch(updateSearchText(target.value))\r\n    // force re-render on navLinkList by changing its state and making the list items pass through the filter\r\n    dispatch(forceItemListStateChange()) \r\n  }\r\n\r\n  const toggleDisplayFavHandler = ({ target }) => {\r\n    dispatch(toggleDisplayFav(target.value))\r\n  }\r\n\r\n  return (\r\n    <div className='linkItemSearch'>\r\n      <input onChange={onChangeText} className='linkItemSearchInput' value={text} placeholder='Search ' type='text'></input>\r\n      \r\n      <label onChange={toggleDisplayFavHandler} className='linkItemSearchLable'>favorites only</label>\r\n      <input className='linkItemSearchFavToggle' type='checkbox'></input>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LinkItemSearch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uDAAP;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,uCAAnD;AACA,SAASC,wBAAT,EAAmCC,gBAAnC,QAA2D,2BAA3D;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,IAAI,GAAGP,WAAW,CAACC,gBAAD,CAAxB;;EAEA,MAAMO,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAF,CAAe;IACnCH,QAAQ,CAACJ,gBAAgB,CAACO,MAAM,CAACC,KAAR,CAAjB,CAAR,CADmC,CAEnC;;IACAJ,QAAQ,CAACH,wBAAwB,EAAzB,CAAR;EACD,CAJD;;EAMA,MAAMQ,uBAAuB,GAAG,SAAgB;IAAA,IAAf;MAAEF;IAAF,CAAe;IAC9CH,QAAQ,CAACF,gBAAgB,CAACK,MAAM,CAACC,KAAR,CAAjB,CAAR;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAO,QAAQ,EAAEF,YAAjB;MAA+B,SAAS,EAAC,qBAAzC;MAA+D,KAAK,EAAED,IAAtE;MAA4E,WAAW,EAAC,SAAxF;MAAkG,IAAI,EAAC;IAAvG;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAO,QAAQ,EAAEI,uBAAjB;MAA0C,SAAS,EAAC,qBAApD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAO,SAAS,EAAC,yBAAjB;MAA2C,IAAI,EAAC;IAAhD;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAtBD;;GAAMN,c;UACaN,W,EACJC,W;;;KAFTK,c;AAwBN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}