{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { newKey } from '../../utils'; // =============== Slice Object ===============\n\nexport const navBarSlice = createSlice({\n  name: 'navBarList',\n  initialState: [],\n  reducers: {\n    addNavItem: action => {\n      console.log('addNavItem: ' + action.payload);\n      return action.payload; //state.push(action.payload)\n      // state.push({\n      //     navItemKey:newKey(),\n      //     title:action.payload,\n      //     isSelected:false,\n      //     linkItemList:[]\n      // })        \n    },\n    // navItemKey\n    // title\n    // isSelected\n    // linkItemList\n    deleteNavItem: (state, action) => {\n      return state.filter(navItem => navItem !== action.payload);\n    },\n    toggleIsSelected: (state, action) => {},\n    addLinkItem: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          state[i].linkItemList.push({\n            linkItemKey: newKey(),\n            url: action.payload,\n            isFav: false\n          });\n          break;\n        }\n      } // navItemKey\n      // title (nav bar display text)  \n      // sub list of urls\n      // linkItemKey\n      // url\n      // isFav\n\n    },\n    updateLinkItemUrl: (state, action) => {},\n    deleteLinkItem: (state, action) => {//return state.\n    },\n    toggleFav: (state, action) => {}\n  }\n}); // =============== Selectors ===============\n\nexport const selectNavBarList = state => state.navBarList; // =============== Exports ===============\n\nexport const {\n  addNavItem,\n  deleteNavItem,\n  addLinkItem,\n  updateLinkItemUrl,\n  deleteLinkItem,\n  toggleFav\n} = navBarSlice.actions;\nexport default navBarSlice.reducer;","map":{"version":3,"names":["createSlice","newKey","navBarSlice","name","initialState","reducers","addNavItem","action","console","log","payload","deleteNavItem","state","filter","navItem","toggleIsSelected","addLinkItem","i","length","isSelected","linkItemList","push","linkItemKey","url","isFav","updateLinkItemUrl","deleteLinkItem","toggleFav","selectNavBarList","navBarList","actions","reducer"],"sources":["C:/Users/Aaron/Documents/prograns/web/quickLinks/quick-links/src/features/navBarList/navBarSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport { newKey } from '../../utils'\r\n\r\n// =============== Slice Object ===============\r\nexport const navBarSlice = createSlice({\r\n    name:'navBarList',\r\n    initialState:[],\r\n    reducers:{\r\n        addNavItem:( action) => {         \r\n            console.log('addNavItem: '+action.payload)\r\n            return action.payload            \r\n            //state.push(action.payload)\r\n            // state.push({\r\n            //     navItemKey:newKey(),\r\n            //     title:action.payload,\r\n            //     isSelected:false,\r\n            //     linkItemList:[]\r\n            // })        \r\n        },\r\n        // navItemKey\r\n        // title\r\n        // isSelected\r\n        // linkItemList\r\n\r\n        deleteNavItem:(state, action) => {\r\n            return state.filter(navItem => navItem !== action.payload)\r\n        },\r\n        toggleIsSelected:(state, action) => {\r\n\r\n        },\r\n\r\n        addLinkItem:(state, action) => {            \r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){                    \r\n                    state[i].linkItemList.push({\r\n                        linkItemKey:newKey(),\r\n                        url:action.payload,\r\n                        isFav:false\r\n                    })\r\n                    break\r\n                }                \r\n            }            \r\n                // navItemKey\r\n                // title (nav bar display text)  \r\n                // sub list of urls\r\n                    // linkItemKey\r\n                    // url\r\n                    // isFav\r\n\r\n        },\r\n        updateLinkItemUrl:(state, action) => {\r\n\r\n        },\r\n        deleteLinkItem:(state, action) => {\r\n            //return state.\r\n        },\r\n\r\n        toggleFav:(state, action) => {\r\n\r\n        }\r\n    }\r\n})\r\n\r\n// =============== Selectors ===============\r\nexport const selectNavBarList = state => state.navBarList\r\n\r\n// =============== Exports ===============\r\nexport const {\r\n    addNavItem,\r\n    deleteNavItem,\r\n    addLinkItem,\r\n    updateLinkItemUrl,\r\n    deleteLinkItem,\r\n    toggleFav\r\n} = navBarSlice.actions\r\n\r\nexport default navBarSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,MAAT,QAAuB,aAAvB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAC,YAD8B;EAEnCC,YAAY,EAAC,EAFsB;EAGnCC,QAAQ,EAAC;IACLC,UAAU,EAAGC,MAAF,IAAa;MACpBC,OAAO,CAACC,GAAR,CAAY,iBAAeF,MAAM,CAACG,OAAlC;MACA,OAAOH,MAAM,CAACG,OAAd,CAFoB,CAGpB;MACA;MACA;MACA;MACA;MACA;MACA;IACH,CAXI;IAYL;IACA;IACA;IACA;IAEAC,aAAa,EAAC,CAACC,KAAD,EAAQL,MAAR,KAAmB;MAC7B,OAAOK,KAAK,CAACC,MAAN,CAAaC,OAAO,IAAIA,OAAO,KAAKP,MAAM,CAACG,OAA3C,CAAP;IACH,CAnBI;IAoBLK,gBAAgB,EAAC,CAACH,KAAD,EAAQL,MAAR,KAAmB,CAEnC,CAtBI;IAwBLS,WAAW,EAAC,CAACJ,KAAD,EAAQL,MAAR,KAAmB;MAC3B,KAAI,IAAIU,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,KAAK,CAACM,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGL,KAAK,CAACK,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnBP,KAAK,CAACK,CAAD,CAAL,CAASG,YAAT,CAAsBC,IAAtB,CAA2B;YACvBC,WAAW,EAACrB,MAAM,EADK;YAEvBsB,GAAG,EAAChB,MAAM,CAACG,OAFY;YAGvBc,KAAK,EAAC;UAHiB,CAA3B;UAKA;QACH;MACJ,CAV0B,CAWvB;MACA;MACA;MACI;MACA;MACA;;IAEX,CA1CI;IA2CLC,iBAAiB,EAAC,CAACb,KAAD,EAAQL,MAAR,KAAmB,CAEpC,CA7CI;IA8CLmB,cAAc,EAAC,CAACd,KAAD,EAAQL,MAAR,KAAmB,CAC9B;IACH,CAhDI;IAkDLoB,SAAS,EAAC,CAACf,KAAD,EAAQL,MAAR,KAAmB,CAE5B;EApDI;AAH0B,CAAD,CAA/B,C,CA2DP;;AACA,OAAO,MAAMqB,gBAAgB,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,UAAxC,C,CAEP;;AACA,OAAO,MAAM;EACTvB,UADS;EAETK,aAFS;EAGTK,WAHS;EAITS,iBAJS;EAKTC,cALS;EAMTC;AANS,IAOTzB,WAAW,CAAC4B,OAPT;AASP,eAAe5B,WAAW,CAAC6B,OAA3B"},"metadata":{},"sourceType":"module"}