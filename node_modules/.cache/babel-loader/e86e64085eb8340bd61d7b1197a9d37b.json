{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { newKey, getSelectedNavLinkItemList, getInFocusLinkItemUrlText } from '../../utils'; // =============== Slice Object ===============\n\nexport const navBarSlice = createSlice({\n  name: 'navBarList',\n  initialState: [],\n  reducers: {\n    addNavItem: (state, action) => {\n      let isSelectedState = false;\n      if (state.length === 0) isSelectedState = true;\n      state.push({\n        navItemKey: newKey(),\n        title: action.payload,\n        isSelected: isSelectedState,\n        linkItemList: []\n      });\n    },\n    // navItemKey\n    // title\n    // isSelected\n    // linkItemList\n    deleteNavItem: (state, action) => {\n      if (state.length === 1) return []; // index of navItem to delete\n\n      let removeIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (action.payload === state[i].navItemKey) {\n          removeIndex = i;\n          return [...state.slice(0, removeIndex), ...state.slice(removeIndex + 1, state.length)];\n        }\n      }\n    },\n    toggleIsSelected: (state, action) => {\n      // first de-select the current selected nav item\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) state[i].isSelected = false;\n      } // second, find the nav item which needs to be selected\n\n\n      for (let i = 0; i < state.length; ++i) if (state[i].navItemKey === action.payload) state[i].isSelected = true;\n\n      return state;\n    },\n    addLinkItem: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          state[i].linkItemList.push({\n            linkItemKey: newKey(),\n            url: action.payload,\n            isFav: false,\n            isInFocus: false,\n            note: ''\n          });\n        }\n      } // navItemKey\n      // title (nav bar display text)  \n      // sub list of urls\n      // linkItemKey\n      // url\n      // isFav\n\n    },\n    updateLinkItemUrl: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].isInFocus) {\n              state[i].linkItemList[j].url = action.payload;\n            }\n          }\n        }\n      }\n\n      return state;\n    },\n    deleteLinkItem: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    },\n    toggleFav: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav ? false : true,\n          isInFocus: linkItem.isInFocus\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    },\n    toggleFocus: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav,\n          isInFocus: linkItem.isInFocus ? false : true\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    }\n  }\n}); // =============== Selectors ===============\n\nexport const selectNavBarList = state => state.navBarList;\nexport const selectIsSelectedLinkItemList = state => {\n  for (let i = 0; i < state.navBarList.length; ++i) if (state.navBarList[i].isSelected) return state.navBarList[i].linkItemList;\n};\nexport const selectFocusedUrlText = state => {\n  for (let i = 0; i < state.length; ++i) {\n    if (state[i].isSelected) {\n      for (let j = 0; j < state[i].linkItemList.length; ++j) {\n        if (state[i].linkItemList[j].isInFocus) {\n          return state[i].linkItemList[j].url;\n        }\n      }\n    }\n  }\n}; //export const select\n// =============== Exports ===============\n\nexport const {\n  addNavItem,\n  deleteNavItem,\n  addLinkItem,\n  updateLinkItemUrl,\n  deleteLinkItem,\n  toggleFav,\n  toggleIsSelected,\n  toggleFocus\n} = navBarSlice.actions;\nexport default navBarSlice.reducer;","map":{"version":3,"names":["createSlice","newKey","getSelectedNavLinkItemList","getInFocusLinkItemUrlText","navBarSlice","name","initialState","reducers","addNavItem","state","action","isSelectedState","length","push","navItemKey","title","payload","isSelected","linkItemList","deleteNavItem","removeIndex","i","slice","toggleIsSelected","addLinkItem","linkItemKey","url","isFav","isInFocus","note","updateLinkItemUrl","j","deleteLinkItem","navItemIndex","linkItemIndex","navItem","toggleFav","linkItem","toggleFocus","selectNavBarList","navBarList","selectIsSelectedLinkItemList","selectFocusedUrlText","actions","reducer"],"sources":["C:/Users/Aaron/Documents/prograns/web/quickLinks/quick-links/src/features/navBarList/navBarSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    newKey,\r\n    getSelectedNavLinkItemList,\r\n\r\n    getInFocusLinkItemUrlText,\r\n} from '../../utils'\r\n\r\n// =============== Slice Object ===============\r\nexport const navBarSlice = createSlice({\r\n    name:'navBarList',\r\n    initialState:[],\r\n    reducers:{\r\n        addNavItem:(state, action) => {         \r\n            let isSelectedState = false\r\n            if(state.length === 0)\r\n                isSelectedState = true\r\n\r\n            state.push({\r\n                navItemKey:newKey(),\r\n                title:action.payload,\r\n                isSelected:isSelectedState,\r\n                linkItemList:[]    \r\n            })\r\n        },        \r\n        // navItemKey\r\n        // title\r\n        // isSelected\r\n        // linkItemList\r\n\r\n        deleteNavItem:(state, action) => {\r\n            if(state.length === 1)\r\n                return []\r\n\r\n            // index of navItem to delete\r\n            let removeIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(action.payload === state[i].navItemKey){\r\n                    removeIndex = i\r\n                    return [\r\n                        ...state.slice(0, removeIndex),\r\n                        ...state.slice(removeIndex+1, state.length)\r\n                    ]   \r\n                }\r\n            }                      \r\n        },\r\n\r\n        toggleIsSelected:(state, action) => {\r\n            // first de-select the current selected nav item\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected)\r\n                    state[i].isSelected = false\r\n            }\r\n            // second, find the nav item which needs to be selected\r\n            for(let i=0; i<state.length; ++i)\r\n                if(state[i].navItemKey === action.payload)\r\n                    state[i].isSelected = true\r\n\r\n            return state\r\n        },\r\n\r\n        addLinkItem:(state, action) => {            \r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){                    \r\n                    state[i].linkItemList.push({\r\n                        linkItemKey:newKey(),\r\n                        url:action.payload,\r\n                        isFav:false,\r\n                        isInFocus: false,\r\n                        note:''\r\n                    })                    \r\n                }                \r\n            }            \r\n                // navItemKey\r\n                // title (nav bar display text)  \r\n                // sub list of urls\r\n                    // linkItemKey\r\n                    // url\r\n                    // isFav\r\n\r\n        },\r\n        updateLinkItemUrl:(state, action) => {\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].isInFocus){\r\n                            state[i].linkItemList[j].url = action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return state\r\n        },\r\n        deleteLinkItem:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),                        \r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        },\r\n\r\n        toggleFav:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav ? false : true,\r\n                            isInFocus: linkItem.isInFocus\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        },\r\n\r\n        toggleFocus:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav,\r\n                            isInFocus: linkItem.isInFocus ? false : true\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        }\r\n    }\r\n})\r\n\r\n// =============== Selectors ===============\r\nexport const selectNavBarList = state => state.navBarList\r\n\r\nexport const selectIsSelectedLinkItemList = state => {\r\n    for(let i=0; i<state.navBarList.length; ++i)\r\n        if(state.navBarList[i].isSelected)\r\n            return state.navBarList[i].linkItemList\r\n}\r\n\r\nexport const selectFocusedUrlText = state => {\r\n    for(let i=0; i<state.length; ++i){\r\n        if(state[i].isSelected){\r\n            for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                if(state[i].linkItemList[j].isInFocus){\r\n                    return state[i].linkItemList[j].url\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//export const select\r\n\r\n\r\n// =============== Exports ===============\r\nexport const {\r\n    addNavItem,\r\n    deleteNavItem,\r\n    addLinkItem,\r\n    updateLinkItemUrl,\r\n    deleteLinkItem,\r\n    toggleFav,\r\n    toggleIsSelected,\r\n    toggleFocus\r\n} = navBarSlice.actions\r\n\r\nexport default navBarSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}