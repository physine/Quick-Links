{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { newKey, getSelectedNavLinkItemList, applyLinkListFilters, getInFocusLinkItemUrlText } from '../../utils'; // =============== Slice Object ===============\n\nexport const navBarSlice = createSlice({\n  name: 'navBarList',\n  initialState: [],\n  reducers: {\n    addNavItem: (state, action) => {\n      let isSelectedState = false;\n      if (state.length === 0) isSelectedState = true;\n      state.push({\n        navItemKey: newKey(),\n        title: action.payload,\n        isSelected: isSelectedState,\n        linkItemList: []\n      });\n    },\n    // navItemKey\n    // title\n    // isSelected\n    // linkItemList\n    deleteNavItem: (state, action) => {\n      if (state.length === 1) return []; // index of navItem to delete\n\n      let removeIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (action.payload === state[i].navItemKey) {\n          removeIndex = i;\n          return [...state.slice(0, removeIndex), ...state.slice(removeIndex + 1, state.length)];\n        }\n      }\n    },\n    toggleIsSelected: (state, action) => {\n      // first de-select the current selected nav item\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) state[i].isSelected = false;\n      } // second, find the nav item which needs to be selected\n\n\n      for (let i = 0; i < state.length; ++i) if (state[i].navItemKey === action.payload) state[i].isSelected = true;\n\n      return state;\n    },\n    addLinkItem: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          state[i].linkItemList.push({\n            linkItemKey: newKey(),\n            url: action.payload,\n            isFav: true,\n            isInFocus: false,\n            isInFocusNote: false,\n            note: ''\n          });\n        }\n      } // navItemKey\n      // title (nav bar display text)  \n      // sub list of urls\n      // linkItemKey\n      // url\n      // isFav\n\n    },\n    updateLinkItemUrl: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].isInFocus) {\n              state[i].linkItemList[j].url = action.payload;\n            }\n          }\n        }\n      }\n\n      return state;\n    },\n    updateLinkItemNote: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].isInFocusNote) {\n              state[i].linkItemList[j].note = action.payload;\n            }\n          }\n        }\n      }\n\n      return state;\n    },\n    deleteLinkItem: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    },\n    toggleFav: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav ? false : true,\n          isInFocus: linkItem.isInFocus,\n          isInFocusNote: linkItem.isInFocusNote\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    },\n    toggleFocusUrl: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav,\n          isInFocus: linkItem.isInFocus ? false : true,\n          isInFocusNote: linkItem.isInFocusNote\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    },\n    toggleFocusNote: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      return [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav,\n          isInFocus: linkItem.isInFocus,\n          isInFocusNote: linkItem.isInFocusNote ? false : true,\n          note: linkItem.note\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n    }\n  }\n}); // =============== Selectors ===============\n\nexport const selectNavBarList = state => state.navBarList;\nexport const selectIsSelectedLinkItemList = state => {\n  for (let i = 0; i < state.navBarList.length; ++i) if (state.navBarList[i].isSelected) {\n    let list = state.navBarList[i].linkItemList;\n    return applyLinkListFilters(list, list); // fav and/or search\n    // console.log(list)\n    // return list\n  }\n};\nexport const selectFocusedUrlText = state => {\n  for (let i = 0; i < state.length; ++i) {\n    if (state[i].isSelected) {\n      for (let j = 0; j < state[i].linkItemList.length; ++j) {\n        if (state[i].linkItemList[j].isInFocus) {\n          console.log('link: ' + state[i].linkItemList[j].url);\n          return state[i].linkItemList[j].url;\n        }\n      }\n    }\n  }\n};\nexport const selectFocusedNote = state => {\n  for (let i = 0; i < state.length; ++i) {\n    if (state[i].isSelected) {\n      for (let j = 0; j < state[i].linkItemList.length; ++j) {\n        if (state[i].linkItemList[j].isInFocusNote) {\n          console.log('link: ' + state[i].linkItemList[j].note);\n          return state[i].linkItemList[j].note;\n        }\n      }\n    }\n  }\n}; // =============== Exports ===============\n\nexport const {\n  addNavItem,\n  deleteNavItem,\n  addLinkItem,\n  updateLinkItemUrl,\n  deleteLinkItem,\n  toggleFav,\n  toggleIsSelected,\n  toggleFocusUrl,\n  toggleFocusNote,\n  updateLinkItemNote\n} = navBarSlice.actions;\nexport default navBarSlice.reducer;","map":{"version":3,"names":["createSlice","newKey","getSelectedNavLinkItemList","applyLinkListFilters","getInFocusLinkItemUrlText","navBarSlice","name","initialState","reducers","addNavItem","state","action","isSelectedState","length","push","navItemKey","title","payload","isSelected","linkItemList","deleteNavItem","removeIndex","i","slice","toggleIsSelected","addLinkItem","linkItemKey","url","isFav","isInFocus","isInFocusNote","note","updateLinkItemUrl","j","updateLinkItemNote","deleteLinkItem","navItemIndex","linkItemIndex","navItem","toggleFav","linkItem","toggleFocusUrl","toggleFocusNote","selectNavBarList","navBarList","selectIsSelectedLinkItemList","list","selectFocusedUrlText","console","log","selectFocusedNote","actions","reducer"],"sources":["C:/Users/Aaron/Documents/prograns/web/quickLinks/quick-links/src/features/navBarList/navBarSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    newKey,\r\n    getSelectedNavLinkItemList,\r\n    applyLinkListFilters,\r\n    getInFocusLinkItemUrlText,\r\n} from '../../utils'\r\n\r\n// =============== Slice Object ===============\r\nexport const navBarSlice = createSlice({\r\n    name:'navBarList',\r\n    initialState:[],\r\n    reducers:{\r\n        addNavItem:(state, action) => {         \r\n            let isSelectedState = false\r\n            if(state.length === 0)\r\n                isSelectedState = true\r\n\r\n            state.push({\r\n                navItemKey:newKey(),\r\n                title:action.payload,\r\n                isSelected:isSelectedState,\r\n                linkItemList:[]    \r\n            })\r\n        },        \r\n        // navItemKey\r\n        // title\r\n        // isSelected\r\n        // linkItemList\r\n\r\n        deleteNavItem:(state, action) => {\r\n            if(state.length === 1)\r\n                return []\r\n\r\n            // index of navItem to delete\r\n            let removeIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(action.payload === state[i].navItemKey){\r\n                    removeIndex = i\r\n                    return [\r\n                        ...state.slice(0, removeIndex),\r\n                        ...state.slice(removeIndex+1, state.length)\r\n                    ]   \r\n                }\r\n            }                      \r\n        },\r\n\r\n        toggleIsSelected:(state, action) => {\r\n            // first de-select the current selected nav item\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected)\r\n                    state[i].isSelected = false\r\n            }\r\n            // second, find the nav item which needs to be selected\r\n            for(let i=0; i<state.length; ++i)\r\n                if(state[i].navItemKey === action.payload)\r\n                    state[i].isSelected = true\r\n\r\n            return state\r\n        },\r\n\r\n        addLinkItem:(state, action) => {            \r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){                    \r\n                    state[i].linkItemList.push({\r\n                        linkItemKey:newKey(),\r\n                        url:action.payload,\r\n                        isFav:true,\r\n                        isInFocus: false,\r\n                        isInFocusNote:false,\r\n                        note:''\r\n                    })                    \r\n                }                \r\n            }            \r\n                // navItemKey\r\n                // title (nav bar display text)  \r\n                // sub list of urls\r\n                    // linkItemKey\r\n                    // url\r\n                    // isFav\r\n\r\n        },\r\n        updateLinkItemUrl:(state, action) => {\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].isInFocus){\r\n                            state[i].linkItemList[j].url = action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return state\r\n        },\r\n        updateLinkItemNote:(state, action) => {\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].isInFocusNote){\r\n                            state[i].linkItemList[j].note = action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return state\r\n        },\r\n        deleteLinkItem:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),                        \r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        },\r\n\r\n        toggleFav:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav ? false : true,\r\n                            isInFocus: linkItem.isInFocus,\r\n                            isInFocusNote: linkItem.isInFocusNote\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        },\r\n\r\n        toggleFocusUrl:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav,\r\n                            isInFocus: linkItem.isInFocus ? false : true,\r\n                            isInFocusNote: linkItem.isInFocusNote\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        },\r\n\r\n        toggleFocusNote:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            return [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav,\r\n                            isInFocus: linkItem.isInFocus,                            \r\n                            isInFocusNote: linkItem.isInFocusNote ? false : true,\r\n                            note:linkItem.note\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n        }\r\n    }\r\n})\r\n\r\n// =============== Selectors ===============\r\nexport const selectNavBarList = state => state.navBarList\r\n\r\nexport const selectIsSelectedLinkItemList = state => {\r\n    for(let i=0; i<state.navBarList.length; ++i)\r\n        if(state.navBarList[i].isSelected){\r\n            let list = state.navBarList[i].linkItemList\r\n            return applyLinkListFilters(list, list) // fav and/or search\r\n            // console.log(list)\r\n            // return list\r\n        }            \r\n}\r\n\r\nexport const selectFocusedUrlText = state => {\r\n    for(let i=0; i<state.length; ++i){\r\n        if(state[i].isSelected){\r\n            for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                if(state[i].linkItemList[j].isInFocus){\r\n                    console.log('link: '+state[i].linkItemList[j].url)\r\n                    return state[i].linkItemList[j].url\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const selectFocusedNote = state => {\r\n    for(let i=0; i<state.length; ++i){\r\n        if(state[i].isSelected){\r\n            for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                if(state[i].linkItemList[j].isInFocusNote){\r\n                    console.log('link: '+state[i].linkItemList[j].note)\r\n                    return state[i].linkItemList[j].note\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// =============== Exports ===============\r\nexport const {\r\n    addNavItem,\r\n    deleteNavItem,\r\n    addLinkItem,\r\n    updateLinkItemUrl,\r\n    deleteLinkItem,\r\n    toggleFav,\r\n    toggleIsSelected,\r\n    toggleFocusUrl,\r\n    toggleFocusNote,\r\n    updateLinkItemNote\r\n} = navBarSlice.actions\r\n\r\nexport default navBarSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}