{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { newKey, applyLinkListFilters, applyNavBarListFilters, islocalStorageEmpty, localStorageState, falsifyFocus } from '../../utils'; // =============== Slice Object ===============\n\nexport const navBarSlice = createSlice({\n  name: 'navBarList',\n  initialState: islocalStorageEmpty() ? [] : localStorageState(),\n  // initialState: islocalStorageEmpty() ? [] : getLocalStorageState() ,\n  reducers: {\n    forceItemListStateChange: (state, action) => {\n      for (let i = 0; i < state.length; ++i) if (state[i].isSelected) state[i].toggleRender = state[i].toggleRender ? false : true;\n    },\n    addNavItem: (state, action) => {\n      let isSelectedState = false;\n      if (state.length === 0) isSelectedState = true;\n      state.push({\n        navItemKey: newKey(),\n        title: action.payload,\n        isSelected: isSelectedState,\n        toggleRender: false,\n        linkItemList: []\n      });\n      localStorage.removeItem('navBarList');\n      let stateCopy = [...state];\n      localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n    },\n    deleteNavItem: (state, action) => {\n      if (state.length === 1) {\n        //localStorage.removeItem('navBarList')                \n        return [];\n      } // index of navItem to delete\n\n\n      let removeIndex;\n      let newState;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (action.payload === state[i].navItemKey) {\n          removeIndex = i;\n          newState = [...state.slice(0, removeIndex), ...state.slice(removeIndex + 1, state.length)];\n        }\n      }\n\n      localStorage.removeItem('navBarList');\n      let stateCopy = [...newState];\n      localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n      return newState;\n    },\n    toggleIsSelected: (state, action) => {\n      // first de-select the current selected nav item\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) state[i].isSelected = false;\n      } // second, find the nav item which needs to be selected\n\n\n      for (let i = 0; i < state.length; ++i) if (state[i].navItemKey === action.payload) state[i].isSelected = true;\n\n      return state;\n    },\n    addLinkItem: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          state[i].linkItemList.push({\n            linkItemKey: newKey(),\n            url: action.payload,\n            isFav: false,\n            isInFocus: false,\n            isInFocusNote: false,\n            note: ''\n          });\n        }\n      }\n\n      localStorage.removeItem('navBarList');\n      let stateCopy = [...state];\n      localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n    },\n    updateLinkItemUrl: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].isInFocus) {\n              state[i].linkItemList[j].url = action.payload;\n            }\n          }\n        }\n      } // localStorage.removeItem('navBarList')\n      // let stateCopy = [...state] \n      // localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\n\n\n      return state;\n    },\n    updateLinkItemNote: (state, action) => {\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].isInFocusNote) {\n              state[i].linkItemList[j].note = action.payload;\n            }\n          }\n        }\n      } // localStorage.removeItem('navBarList')\n      // let stateCopy = [...state] \n      // localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\n\n\n      return state;\n    },\n    deleteLinkItem: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let newState = [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        toggleRender: navItem.toggleRender,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n      localStorage.removeItem('navBarList');\n      let stateCopy = [...newState];\n      localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n      return newState;\n    },\n    toggleFav: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      let newState = [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        toggleRender: navItem.toggleRender,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav ? false : true,\n          isInFocus: linkItem.isInFocus,\n          isInFocusNote: linkItem.isInFocusNote,\n          note: linkItem.note\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n      localStorage.removeItem('navBarList');\n      let stateCopy = [...newState];\n      localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n      return newState;\n    },\n    toggleFocusUrl: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      let newState = [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        toggleRender: navItem.toggleRender,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav,\n          isInFocus: linkItem.isInFocus ? false : true,\n          isInFocusNote: linkItem.isInFocusNote,\n          note: linkItem.note\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n\n      if (!newState[navItemIndex].linkItemList[linkItemIndex].isInFocusNote) {\n        localStorage.removeItem('navBarList');\n        let stateCopy = [...newState];\n        localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n      }\n\n      return newState;\n    },\n    toggleFocusNote: (state, action) => {\n      let navItemIndex;\n      let linkItemIndex;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItemIndex = i;\n\n          for (let j = 0; j < state[i].linkItemList.length; ++j) {\n            if (state[i].linkItemList[j].linkItemKey === action.payload) {\n              linkItemIndex = j;\n              break;\n            }\n          }\n        }\n      }\n\n      let navItem = state[navItemIndex];\n      let linkItemList = state[navItemIndex].linkItemList;\n      let linkItem = linkItemList[linkItemIndex];\n      let newState = [...state.slice(0, navItemIndex), {\n        navItemKey: navItem.navItemKey,\n        title: navItem.title,\n        isSelected: navItem.isSelected,\n        toggleRender: navItem.toggleRender,\n        linkItemList: [...linkItemList.slice(0, linkItemIndex), {\n          linkItemKey: linkItem.linkItemKey,\n          url: linkItem.url,\n          isFav: linkItem.isFav,\n          isInFocus: linkItem.isInFocus,\n          isInFocusNote: linkItem.isInFocusNote ? false : true,\n          note: linkItem.note\n        }, ...linkItemList.slice(linkItemIndex + 1, linkItemList.length)]\n      }, ...state.slice(navItemIndex + 1, state.length)];\n\n      if (!newState[navItemIndex].linkItemList[linkItemIndex].isInFocusNote) {\n        localStorage.removeItem('navBarList');\n        let stateCopy = [...newState];\n        localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)));\n      }\n\n      return newState;\n    }\n  }\n}); // =============== Selectors ===============\n\nexport const selectNavBarList = state => {\n  return applyNavBarListFilters(state.navBarList, state.navBarSearch);\n};\nexport const selectIsSelectedLinkItemList = state => {\n  for (let i = 0; i < state.navBarList.length; ++i) if (state.navBarList[i].isSelected) {\n    let list = state.navBarList[i].linkItemList;\n    return applyLinkListFilters(list, state.linkItemSearch, state.favCheckbox); // item list fav and/or search      \n  }\n};\nexport const selectFocusedUrlText = state => {\n  for (let i = 0; i < state.length; ++i) {\n    if (state[i].isSelected) {\n      for (let j = 0; j < state[i].linkItemList.length; ++j) {\n        if (state[i].linkItemList[j].isInFocus) {\n          return state[i].linkItemList[j].url;\n        }\n      }\n    }\n  }\n};\nexport const selectFocusedNote = state => {\n  for (let i = 0; i < state.length; ++i) {\n    if (state[i].isSelected) {\n      for (let j = 0; j < state[i].linkItemList.length; ++j) {\n        if (state[i].linkItemList[j].isInFocusNote) {\n          return state[i].linkItemList[j].note;\n        }\n      }\n    }\n  }\n}; // =============== Exports ===============\n\nexport const {\n  addNavItem,\n  deleteNavItem,\n  addLinkItem,\n  updateLinkItemUrl,\n  deleteLinkItem,\n  toggleFav,\n  toggleIsSelected,\n  toggleFocusUrl,\n  toggleFocusNote,\n  updateLinkItemNote,\n  forceItemListStateChange\n} = navBarSlice.actions;\nexport default navBarSlice.reducer;","map":{"version":3,"names":["createSlice","newKey","applyLinkListFilters","applyNavBarListFilters","islocalStorageEmpty","localStorageState","falsifyFocus","navBarSlice","name","initialState","reducers","forceItemListStateChange","state","action","i","length","isSelected","toggleRender","addNavItem","isSelectedState","push","navItemKey","title","payload","linkItemList","localStorage","removeItem","stateCopy","setItem","JSON","stringify","deleteNavItem","removeIndex","newState","slice","toggleIsSelected","addLinkItem","linkItemKey","url","isFav","isInFocus","isInFocusNote","note","updateLinkItemUrl","j","updateLinkItemNote","deleteLinkItem","navItemIndex","linkItemIndex","navItem","toggleFav","linkItem","toggleFocusUrl","toggleFocusNote","selectNavBarList","navBarList","navBarSearch","selectIsSelectedLinkItemList","list","linkItemSearch","favCheckbox","selectFocusedUrlText","selectFocusedNote","actions","reducer"],"sources":["C:/Users/Aaron/Documents/prograns/web/quickLinks/quick-links/src/features/navBarList/navBarSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    newKey,\r\n    applyLinkListFilters,\r\n    applyNavBarListFilters,\r\n    islocalStorageEmpty,\r\n    localStorageState,\r\n    falsifyFocus,\r\n} from '../../utils'\r\n\r\n// =============== Slice Object ===============\r\nexport const navBarSlice = createSlice({\r\n    name:'navBarList',\r\n    initialState: islocalStorageEmpty() ? [] : localStorageState(), // initialState: islocalStorageEmpty() ? [] : getLocalStorageState() ,\r\n    reducers:{\r\n        forceItemListStateChange:(state, action) => {\r\n            for(let i=0; i<state.length; ++i)\r\n                if(state[i].isSelected)\r\n                    state[i].toggleRender = state[i].toggleRender ? false : true\r\n        },\r\n\r\n        addNavItem:(state, action) => {         \r\n            let isSelectedState = false\r\n            if(state.length === 0)\r\n                isSelectedState = true\r\n\r\n            state.push({\r\n                navItemKey:newKey(),\r\n                title:action.payload,\r\n                isSelected:isSelectedState,\r\n                toggleRender:false,\r\n                linkItemList:[],                \r\n            })\r\n\r\n            localStorage.removeItem('navBarList')\r\n            let stateCopy = [...state] \r\n            localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n        },        \r\n\r\n        deleteNavItem:(state, action) => {\r\n            if(state.length === 1){\r\n                //localStorage.removeItem('navBarList')                \r\n                return []\r\n            }\r\n\r\n            // index of navItem to delete\r\n            let removeIndex\r\n            let newState\r\n            for(let i=0; i<state.length; ++i){\r\n                if(action.payload === state[i].navItemKey){\r\n                    removeIndex = i\r\n                    newState = [\r\n                        ...state.slice(0, removeIndex),\r\n                        ...state.slice(removeIndex+1, state.length)\r\n                    ]   \r\n                }\r\n            }\r\n                        \r\n            localStorage.removeItem('navBarList')\r\n            let stateCopy = [...newState] \r\n            localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n\r\n            return newState\r\n        },\r\n\r\n        toggleIsSelected:(state, action) => {\r\n            // first de-select the current selected nav item\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected)\r\n                    state[i].isSelected = false\r\n            }\r\n            // second, find the nav item which needs to be selected\r\n            for(let i=0; i<state.length; ++i)\r\n                if(state[i].navItemKey === action.payload)\r\n                    state[i].isSelected = true\r\n\r\n            return state\r\n        },\r\n\r\n        addLinkItem:(state, action) => {            \r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){                    \r\n                    state[i].linkItemList.push({\r\n                        linkItemKey:newKey(),\r\n                        url:action.payload,\r\n                        isFav:false,\r\n                        isInFocus: false,\r\n                        isInFocusNote:false,\r\n                        note:''\r\n                    })                    \r\n                }                \r\n            }\r\n\r\n            localStorage.removeItem('navBarList')\r\n            let stateCopy = [...state] \r\n            localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n        },\r\n        updateLinkItemUrl:(state, action) => {\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].isInFocus){\r\n                            state[i].linkItemList[j].url = action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // localStorage.removeItem('navBarList')\r\n            // let stateCopy = [...state] \r\n            // localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n\r\n            return state\r\n        },\r\n        updateLinkItemNote:(state, action) => {\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].isInFocusNote){\r\n                            state[i].linkItemList[j].note = action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // localStorage.removeItem('navBarList')\r\n            // let stateCopy = [...state] \r\n            // localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n\r\n            return state\r\n        },\r\n        deleteLinkItem:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList              \r\n\r\n            let newState = [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    toggleRender:navItem.toggleRender,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),                        \r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n\r\n            localStorage.removeItem('navBarList')\r\n            let stateCopy = [...newState] \r\n            localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n\r\n            return newState \r\n\r\n            \r\n        },\r\n\r\n        toggleFav:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            let newState = [\r\n                ...state.slice(0, navItemIndex),\r\n                {             \r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    toggleRender:navItem.toggleRender,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav ? false : true,\r\n                            isInFocus: linkItem.isInFocus,\r\n                            isInFocusNote: linkItem.isInFocusNote,\r\n                            note:linkItem.note\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n\r\n            localStorage.removeItem('navBarList')\r\n            let stateCopy = [...newState] \r\n            localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n\r\n            return newState\r\n        },\r\n\r\n        toggleFocusUrl:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            let newState = [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    toggleRender: navItem.toggleRender,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav,\r\n                            isInFocus: linkItem.isInFocus ? false : true,\r\n                            isInFocusNote: linkItem.isInFocusNote,\r\n                            note: linkItem.note\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n\r\n            if(!newState[navItemIndex].linkItemList[linkItemIndex].isInFocusNote){\r\n                localStorage.removeItem('navBarList')\r\n                let stateCopy = [...newState] \r\n                localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n            }\r\n\r\n            return newState\r\n        },\r\n\r\n        toggleFocusNote:(state, action) => {\r\n            let navItemIndex\r\n            let linkItemIndex\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItemIndex = i\r\n                    for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                        if(state[i].linkItemList[j].linkItemKey === action.payload){\r\n                            linkItemIndex = j\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let navItem = state[navItemIndex]            \r\n            let linkItemList = state[navItemIndex].linkItemList   \r\n            let linkItem = linkItemList[linkItemIndex]\r\n\r\n            let newState = [\r\n                ...state.slice(0, navItemIndex),\r\n                {\r\n                    navItemKey: navItem.navItemKey,\r\n                    title: navItem.title,\r\n                    isSelected: navItem.isSelected,\r\n                    toggleRender:navItem.toggleRender,\r\n                    linkItemList: [\r\n                        ...linkItemList.slice(0, linkItemIndex),\r\n                        {\r\n                            linkItemKey: linkItem.linkItemKey,\r\n                            url: linkItem.url,\r\n                            isFav: linkItem.isFav,\r\n                            isInFocus: linkItem.isInFocus,                            \r\n                            isInFocusNote: linkItem.isInFocusNote ? false : true,\r\n                            note:linkItem.note\r\n                        },\r\n                        ...linkItemList.slice(linkItemIndex+1, linkItemList.length)\r\n                    ]\r\n                },                \r\n                ...state.slice(navItemIndex+1, state.length)\r\n            ]\r\n\r\n            if(!newState[navItemIndex].linkItemList[linkItemIndex].isInFocusNote){\r\n                localStorage.removeItem('navBarList')\r\n                let stateCopy = [...newState] \r\n                localStorage.setItem('navBarList', JSON.stringify(falsifyFocus(stateCopy)))\r\n            }\r\n\r\n            return newState\r\n        }\r\n    }\r\n})\r\n\r\n// =============== Selectors ===============\r\nexport const selectNavBarList = state => {\r\n    return applyNavBarListFilters(state.navBarList, state.navBarSearch)\r\n}\r\n\r\nexport const selectIsSelectedLinkItemList = state => {\r\n    for(let i=0; i<state.navBarList.length; ++i)\r\n        if(state.navBarList[i].isSelected){\r\n            let list = state.navBarList[i].linkItemList\r\n            return applyLinkListFilters(list, state.linkItemSearch, state.favCheckbox) // item list fav and/or search      \r\n        }\r\n}\r\n\r\nexport const selectFocusedUrlText = state => {\r\n    for(let i=0; i<state.length; ++i){\r\n        if(state[i].isSelected){\r\n            for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                if(state[i].linkItemList[j].isInFocus){\r\n                    return state[i].linkItemList[j].url\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const selectFocusedNote = state => {\r\n    for(let i=0; i<state.length; ++i){\r\n        if(state[i].isSelected){\r\n            for(let j=0; j<state[i].linkItemList.length; ++j){\r\n                if(state[i].linkItemList[j].isInFocusNote){\r\n                    return state[i].linkItemList[j].note\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// =============== Exports ===============\r\nexport const {\r\n    addNavItem,\r\n    deleteNavItem,\r\n    addLinkItem,\r\n    updateLinkItemUrl,\r\n    deleteLinkItem,\r\n    toggleFav,\r\n    toggleIsSelected,\r\n    toggleFocusUrl,\r\n    toggleFocusNote,\r\n    updateLinkItemNote,\r\n    forceItemListStateChange\r\n} = navBarSlice.actions\r\n\r\nexport default navBarSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SACIC,MADJ,EAEIC,oBAFJ,EAGIC,sBAHJ,EAIIC,mBAJJ,EAKIC,iBALJ,EAMIC,YANJ,QAOO,aAPP,C,CASA;;AACA,OAAO,MAAMC,WAAW,GAAGP,WAAW,CAAC;EACnCQ,IAAI,EAAC,YAD8B;EAEnCC,YAAY,EAAEL,mBAAmB,KAAK,EAAL,GAAUC,iBAAiB,EAFzB;EAE6B;EAChEK,QAAQ,EAAC;IACLC,wBAAwB,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxC,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EACI,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EACIJ,KAAK,CAACE,CAAD,CAAL,CAASG,YAAT,GAAwBL,KAAK,CAACE,CAAD,CAAL,CAASG,YAAT,GAAwB,KAAxB,GAAgC,IAAxD;IACX,CALI;IAOLC,UAAU,EAAC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAC1B,IAAIM,eAAe,GAAG,KAAtB;MACA,IAAGP,KAAK,CAACG,MAAN,KAAiB,CAApB,EACII,eAAe,GAAG,IAAlB;MAEJP,KAAK,CAACQ,IAAN,CAAW;QACPC,UAAU,EAACpB,MAAM,EADV;QAEPqB,KAAK,EAACT,MAAM,CAACU,OAFN;QAGPP,UAAU,EAACG,eAHJ;QAIPF,YAAY,EAAC,KAJN;QAKPO,YAAY,EAAC;MALN,CAAX;MAQAC,YAAY,CAACC,UAAb,CAAwB,YAAxB;MACA,IAAIC,SAAS,GAAG,CAAC,GAAGf,KAAJ,CAAhB;MACAa,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;IACH,CAvBI;IAyBLI,aAAa,EAAC,CAACnB,KAAD,EAAQC,MAAR,KAAmB;MAC7B,IAAGD,KAAK,CAACG,MAAN,KAAiB,CAApB,EAAsB;QAClB;QACA,OAAO,EAAP;MACH,CAJ4B,CAM7B;;;MACA,IAAIiB,WAAJ;MACA,IAAIC,QAAJ;;MACA,KAAI,IAAInB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGD,MAAM,CAACU,OAAP,KAAmBX,KAAK,CAACE,CAAD,CAAL,CAASO,UAA/B,EAA0C;UACtCW,WAAW,GAAGlB,CAAd;UACAmB,QAAQ,GAAG,CACP,GAAGrB,KAAK,CAACsB,KAAN,CAAY,CAAZ,EAAeF,WAAf,CADI,EAEP,GAAGpB,KAAK,CAACsB,KAAN,CAAYF,WAAW,GAAC,CAAxB,EAA2BpB,KAAK,CAACG,MAAjC,CAFI,CAAX;QAIH;MACJ;;MAEDU,YAAY,CAACC,UAAb,CAAwB,YAAxB;MACA,IAAIC,SAAS,GAAG,CAAC,GAAGM,QAAJ,CAAhB;MACAR,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;MAEA,OAAOM,QAAP;IACH,CAjDI;IAmDLE,gBAAgB,EAAC,CAACvB,KAAD,EAAQC,MAAR,KAAmB;MAChC;MACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EACIJ,KAAK,CAACE,CAAD,CAAL,CAASE,UAAT,GAAsB,KAAtB;MACP,CAL+B,CAMhC;;;MACA,KAAI,IAAIF,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EACI,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASO,UAAT,KAAwBR,MAAM,CAACU,OAAlC,EACIX,KAAK,CAACE,CAAD,CAAL,CAASE,UAAT,GAAsB,IAAtB;;MAER,OAAOJ,KAAP;IACH,CA/DI;IAiELwB,WAAW,EAAC,CAACxB,KAAD,EAAQC,MAAR,KAAmB;MAC3B,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnBJ,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBJ,IAAtB,CAA2B;YACvBiB,WAAW,EAACpC,MAAM,EADK;YAEvBqC,GAAG,EAACzB,MAAM,CAACU,OAFY;YAGvBgB,KAAK,EAAC,KAHiB;YAIvBC,SAAS,EAAE,KAJY;YAKvBC,aAAa,EAAC,KALS;YAMvBC,IAAI,EAAC;UANkB,CAA3B;QAQH;MACJ;;MAEDjB,YAAY,CAACC,UAAb,CAAwB,YAAxB;MACA,IAAIC,SAAS,GAAG,CAAC,GAAGf,KAAJ,CAAhB;MACAa,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;IACH,CAlFI;IAmFLgB,iBAAiB,EAAC,CAAC/B,KAAD,EAAQC,MAAR,KAAmB;MACjC,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnB,KAAI,IAAI4B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;YAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBJ,SAA5B,EAAsC;cAClC5B,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBN,GAAzB,GAA+BzB,MAAM,CAACU,OAAtC;YACH;UACJ;QACJ;MACJ,CATgC,CAWjC;MACA;MACA;;;MAEA,OAAOX,KAAP;IACH,CAnGI;IAoGLiC,kBAAkB,EAAC,CAACjC,KAAD,EAAQC,MAAR,KAAmB;MAClC,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnB,KAAI,IAAI4B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;YAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBH,aAA5B,EAA0C;cACtC7B,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBF,IAAzB,GAAgC7B,MAAM,CAACU,OAAvC;YACH;UACJ;QACJ;MACJ,CATiC,CAWlC;MACA;MACA;;;MAEA,OAAOX,KAAP;IACH,CApHI;IAqHLkC,cAAc,EAAC,CAAClC,KAAD,EAAQC,MAAR,KAAmB;MAC9B,IAAIkC,YAAJ;MACA,IAAIC,aAAJ;;MACA,KAAI,IAAIlC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnB+B,YAAY,GAAGjC,CAAf;;UACA,KAAI,IAAI8B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;YAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBP,WAAzB,KAAyCxB,MAAM,CAACU,OAAnD,EAA2D;cACvDyB,aAAa,GAAGJ,CAAhB;cACA;YACH;UACJ;QACJ;MACJ;;MAED,IAAIK,OAAO,GAAGrC,KAAK,CAACmC,YAAD,CAAnB;MACA,IAAIvB,YAAY,GAAGZ,KAAK,CAACmC,YAAD,CAAL,CAAoBvB,YAAvC;MAEA,IAAIS,QAAQ,GAAG,CACX,GAAGrB,KAAK,CAACsB,KAAN,CAAY,CAAZ,EAAea,YAAf,CADQ,EAEX;QACI1B,UAAU,EAAE4B,OAAO,CAAC5B,UADxB;QAEIC,KAAK,EAAE2B,OAAO,CAAC3B,KAFnB;QAGIN,UAAU,EAAEiC,OAAO,CAACjC,UAHxB;QAIIC,YAAY,EAACgC,OAAO,CAAChC,YAJzB;QAKIO,YAAY,EAAE,CACV,GAAGA,YAAY,CAACU,KAAb,CAAmB,CAAnB,EAAsBc,aAAtB,CADO,EAEV,GAAGxB,YAAY,CAACU,KAAb,CAAmBc,aAAa,GAAC,CAAjC,EAAoCxB,YAAY,CAACT,MAAjD,CAFO;MALlB,CAFW,EAYX,GAAGH,KAAK,CAACsB,KAAN,CAAYa,YAAY,GAAC,CAAzB,EAA4BnC,KAAK,CAACG,MAAlC,CAZQ,CAAf;MAeAU,YAAY,CAACC,UAAb,CAAwB,YAAxB;MACA,IAAIC,SAAS,GAAG,CAAC,GAAGM,QAAJ,CAAhB;MACAR,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;MAEA,OAAOM,QAAP;IAGH,CA7JI;IA+JLiB,SAAS,EAAC,CAACtC,KAAD,EAAQC,MAAR,KAAmB;MACzB,IAAIkC,YAAJ;MACA,IAAIC,aAAJ;;MACA,KAAI,IAAIlC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnB+B,YAAY,GAAGjC,CAAf;;UACA,KAAI,IAAI8B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;YAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBP,WAAzB,KAAyCxB,MAAM,CAACU,OAAnD,EAA2D;cACvDyB,aAAa,GAAGJ,CAAhB;cACA;YACH;UACJ;QACJ;MACJ;;MAED,IAAIK,OAAO,GAAGrC,KAAK,CAACmC,YAAD,CAAnB;MACA,IAAIvB,YAAY,GAAGZ,KAAK,CAACmC,YAAD,CAAL,CAAoBvB,YAAvC;MACA,IAAI2B,QAAQ,GAAG3B,YAAY,CAACwB,aAAD,CAA3B;MAEA,IAAIf,QAAQ,GAAG,CACX,GAAGrB,KAAK,CAACsB,KAAN,CAAY,CAAZ,EAAea,YAAf,CADQ,EAEX;QACI1B,UAAU,EAAE4B,OAAO,CAAC5B,UADxB;QAEIC,KAAK,EAAE2B,OAAO,CAAC3B,KAFnB;QAGIN,UAAU,EAAEiC,OAAO,CAACjC,UAHxB;QAIIC,YAAY,EAACgC,OAAO,CAAChC,YAJzB;QAKIO,YAAY,EAAE,CACV,GAAGA,YAAY,CAACU,KAAb,CAAmB,CAAnB,EAAsBc,aAAtB,CADO,EAEV;UACIX,WAAW,EAAEc,QAAQ,CAACd,WAD1B;UAEIC,GAAG,EAAEa,QAAQ,CAACb,GAFlB;UAGIC,KAAK,EAAEY,QAAQ,CAACZ,KAAT,GAAiB,KAAjB,GAAyB,IAHpC;UAIIC,SAAS,EAAEW,QAAQ,CAACX,SAJxB;UAKIC,aAAa,EAAEU,QAAQ,CAACV,aAL5B;UAMIC,IAAI,EAACS,QAAQ,CAACT;QANlB,CAFU,EAUV,GAAGlB,YAAY,CAACU,KAAb,CAAmBc,aAAa,GAAC,CAAjC,EAAoCxB,YAAY,CAACT,MAAjD,CAVO;MALlB,CAFW,EAoBX,GAAGH,KAAK,CAACsB,KAAN,CAAYa,YAAY,GAAC,CAAzB,EAA4BnC,KAAK,CAACG,MAAlC,CApBQ,CAAf;MAuBAU,YAAY,CAACC,UAAb,CAAwB,YAAxB;MACA,IAAIC,SAAS,GAAG,CAAC,GAAGM,QAAJ,CAAhB;MACAR,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;MAEA,OAAOM,QAAP;IACH,CA9MI;IAgNLmB,cAAc,EAAC,CAACxC,KAAD,EAAQC,MAAR,KAAmB;MAC9B,IAAIkC,YAAJ;MACA,IAAIC,aAAJ;;MACA,KAAI,IAAIlC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnB+B,YAAY,GAAGjC,CAAf;;UACA,KAAI,IAAI8B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;YAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBP,WAAzB,KAAyCxB,MAAM,CAACU,OAAnD,EAA2D;cACvDyB,aAAa,GAAGJ,CAAhB;cACA;YACH;UACJ;QACJ;MACJ;;MAED,IAAIK,OAAO,GAAGrC,KAAK,CAACmC,YAAD,CAAnB;MACA,IAAIvB,YAAY,GAAGZ,KAAK,CAACmC,YAAD,CAAL,CAAoBvB,YAAvC;MACA,IAAI2B,QAAQ,GAAG3B,YAAY,CAACwB,aAAD,CAA3B;MAEA,IAAIf,QAAQ,GAAG,CACX,GAAGrB,KAAK,CAACsB,KAAN,CAAY,CAAZ,EAAea,YAAf,CADQ,EAEX;QACI1B,UAAU,EAAE4B,OAAO,CAAC5B,UADxB;QAEIC,KAAK,EAAE2B,OAAO,CAAC3B,KAFnB;QAGIN,UAAU,EAAEiC,OAAO,CAACjC,UAHxB;QAIIC,YAAY,EAAEgC,OAAO,CAAChC,YAJ1B;QAKIO,YAAY,EAAE,CACV,GAAGA,YAAY,CAACU,KAAb,CAAmB,CAAnB,EAAsBc,aAAtB,CADO,EAEV;UACIX,WAAW,EAAEc,QAAQ,CAACd,WAD1B;UAEIC,GAAG,EAAEa,QAAQ,CAACb,GAFlB;UAGIC,KAAK,EAAEY,QAAQ,CAACZ,KAHpB;UAIIC,SAAS,EAAEW,QAAQ,CAACX,SAAT,GAAqB,KAArB,GAA6B,IAJ5C;UAKIC,aAAa,EAAEU,QAAQ,CAACV,aAL5B;UAMIC,IAAI,EAAES,QAAQ,CAACT;QANnB,CAFU,EAUV,GAAGlB,YAAY,CAACU,KAAb,CAAmBc,aAAa,GAAC,CAAjC,EAAoCxB,YAAY,CAACT,MAAjD,CAVO;MALlB,CAFW,EAoBX,GAAGH,KAAK,CAACsB,KAAN,CAAYa,YAAY,GAAC,CAAzB,EAA4BnC,KAAK,CAACG,MAAlC,CApBQ,CAAf;;MAuBA,IAAG,CAACkB,QAAQ,CAACc,YAAD,CAAR,CAAuBvB,YAAvB,CAAoCwB,aAApC,EAAmDP,aAAvD,EAAqE;QACjEhB,YAAY,CAACC,UAAb,CAAwB,YAAxB;QACA,IAAIC,SAAS,GAAG,CAAC,GAAGM,QAAJ,CAAhB;QACAR,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;MACH;;MAED,OAAOM,QAAP;IACH,CAjQI;IAmQLoB,eAAe,EAAC,CAACzC,KAAD,EAAQC,MAAR,KAAmB;MAC/B,IAAIkC,YAAJ;MACA,IAAIC,aAAJ;;MACA,KAAI,IAAIlC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;QAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;UACnB+B,YAAY,GAAGjC,CAAf;;UACA,KAAI,IAAI8B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;YAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBP,WAAzB,KAAyCxB,MAAM,CAACU,OAAnD,EAA2D;cACvDyB,aAAa,GAAGJ,CAAhB;cACA;YACH;UACJ;QACJ;MACJ;;MAED,IAAIK,OAAO,GAAGrC,KAAK,CAACmC,YAAD,CAAnB;MACA,IAAIvB,YAAY,GAAGZ,KAAK,CAACmC,YAAD,CAAL,CAAoBvB,YAAvC;MACA,IAAI2B,QAAQ,GAAG3B,YAAY,CAACwB,aAAD,CAA3B;MAEA,IAAIf,QAAQ,GAAG,CACX,GAAGrB,KAAK,CAACsB,KAAN,CAAY,CAAZ,EAAea,YAAf,CADQ,EAEX;QACI1B,UAAU,EAAE4B,OAAO,CAAC5B,UADxB;QAEIC,KAAK,EAAE2B,OAAO,CAAC3B,KAFnB;QAGIN,UAAU,EAAEiC,OAAO,CAACjC,UAHxB;QAIIC,YAAY,EAACgC,OAAO,CAAChC,YAJzB;QAKIO,YAAY,EAAE,CACV,GAAGA,YAAY,CAACU,KAAb,CAAmB,CAAnB,EAAsBc,aAAtB,CADO,EAEV;UACIX,WAAW,EAAEc,QAAQ,CAACd,WAD1B;UAEIC,GAAG,EAAEa,QAAQ,CAACb,GAFlB;UAGIC,KAAK,EAAEY,QAAQ,CAACZ,KAHpB;UAIIC,SAAS,EAAEW,QAAQ,CAACX,SAJxB;UAKIC,aAAa,EAAEU,QAAQ,CAACV,aAAT,GAAyB,KAAzB,GAAiC,IALpD;UAMIC,IAAI,EAACS,QAAQ,CAACT;QANlB,CAFU,EAUV,GAAGlB,YAAY,CAACU,KAAb,CAAmBc,aAAa,GAAC,CAAjC,EAAoCxB,YAAY,CAACT,MAAjD,CAVO;MALlB,CAFW,EAoBX,GAAGH,KAAK,CAACsB,KAAN,CAAYa,YAAY,GAAC,CAAzB,EAA4BnC,KAAK,CAACG,MAAlC,CApBQ,CAAf;;MAuBA,IAAG,CAACkB,QAAQ,CAACc,YAAD,CAAR,CAAuBvB,YAAvB,CAAoCwB,aAApC,EAAmDP,aAAvD,EAAqE;QACjEhB,YAAY,CAACC,UAAb,CAAwB,YAAxB;QACA,IAAIC,SAAS,GAAG,CAAC,GAAGM,QAAJ,CAAhB;QACAR,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAexB,YAAY,CAACqB,SAAD,CAA3B,CAAnC;MACH;;MAED,OAAOM,QAAP;IACH;EApTI;AAH0B,CAAD,CAA/B,C,CA2TP;;AACA,OAAO,MAAMqB,gBAAgB,GAAG1C,KAAK,IAAI;EACrC,OAAOT,sBAAsB,CAACS,KAAK,CAAC2C,UAAP,EAAmB3C,KAAK,CAAC4C,YAAzB,CAA7B;AACH,CAFM;AAIP,OAAO,MAAMC,4BAA4B,GAAG7C,KAAK,IAAI;EACjD,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAAC2C,UAAN,CAAiBxC,MAAhC,EAAwC,EAAED,CAA1C,EACI,IAAGF,KAAK,CAAC2C,UAAN,CAAiBzC,CAAjB,EAAoBE,UAAvB,EAAkC;IAC9B,IAAI0C,IAAI,GAAG9C,KAAK,CAAC2C,UAAN,CAAiBzC,CAAjB,EAAoBU,YAA/B;IACA,OAAOtB,oBAAoB,CAACwD,IAAD,EAAO9C,KAAK,CAAC+C,cAAb,EAA6B/C,KAAK,CAACgD,WAAnC,CAA3B,CAF8B,CAE6C;EAC9E;AACR,CANM;AAQP,OAAO,MAAMC,oBAAoB,GAAGjD,KAAK,IAAI;EACzC,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;IAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;MACnB,KAAI,IAAI4B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;QAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBJ,SAA5B,EAAsC;UAClC,OAAO5B,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBN,GAAhC;QACH;MACJ;IACJ;EACJ;AACJ,CAVM;AAYP,OAAO,MAAMwB,iBAAiB,GAAGlD,KAAK,IAAI;EACtC,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACG,MAArB,EAA6B,EAAED,CAA/B,EAAiC;IAC7B,IAAGF,KAAK,CAACE,CAAD,CAAL,CAASE,UAAZ,EAAuB;MACnB,KAAI,IAAI4B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBT,MAArC,EAA6C,EAAE6B,CAA/C,EAAiD;QAC7C,IAAGhC,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBH,aAA5B,EAA0C;UACtC,OAAO7B,KAAK,CAACE,CAAD,CAAL,CAASU,YAAT,CAAsBoB,CAAtB,EAAyBF,IAAhC;QACH;MACJ;IACJ;EACJ;AACJ,CAVM,C,CAaP;;AACA,OAAO,MAAM;EACTxB,UADS;EAETa,aAFS;EAGTK,WAHS;EAITO,iBAJS;EAKTG,cALS;EAMTI,SANS;EAOTf,gBAPS;EAQTiB,cARS;EASTC,eATS;EAUTR,kBAVS;EAWTlC;AAXS,IAYTJ,WAAW,CAACwD,OAZT;AAcP,eAAexD,WAAW,CAACyD,OAA3B"},"metadata":{},"sourceType":"module"}