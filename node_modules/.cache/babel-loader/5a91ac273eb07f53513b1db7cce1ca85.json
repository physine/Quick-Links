{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { newKey } from '../../utils'; // =============== Slice Object ===============\n\nexport const linkItemListSlice = createSlice({\n  name: 'navBarList',\n  initialState: [],\n  reducers: {\n    addNavItem: (state, action) => {\n      state.push({\n        navItemKey: newKey(),\n        title: action.payload,\n        isSelected: false,\n        linkItemList: []\n      });\n      console.log('state length: ' + state.length);\n      console.log(...state);\n    },\n    deleteNavItem: (state, action) => {\n      return state.filter(navItem => navItem !== action.payload);\n    },\n    toggleIsSelected: (state, action) => {},\n    addLinkItem: (state, action) => {\n      var navItem;\n\n      for (let i = 0; i < state.length; ++i) {\n        if (state[i].isSelected) {\n          navItem = state[i];\n          navItem.linkItemList.push({\n            linkItemKey: newKey(),\n            url: action.payload,\n            isFav: false\n          });\n          break;\n        }\n      } // navItemKey\n      // title (nav bar display text)  \n      // sub list of urls\n      // linkKey\n      // url\n      // isFav\n\n    },\n    updateLinkItemUrl: (state, action) => {},\n    deleteLinkItem: (state, action) => {//return state.\n    },\n    toggleFav: (state, action) => {}\n  }\n}); // =============== Selectors ===============\n\nexport const selectNavBarList = state => state.navBarList; // =============== Exports ===============\n\nexport const {\n  addNavItem,\n  deleteNavItem,\n  addLinkItem,\n  updateLinkItemUrl,\n  deleteLinkItem,\n  toggleFav\n} = linkItemListSlice.actions;\nexport default linkItemListSlice.reducer;","map":{"version":3,"names":["createSlice","newKey","linkItemListSlice","name","initialState","reducers","addNavItem","state","action","push","navItemKey","title","payload","isSelected","linkItemList","console","log","length","deleteNavItem","filter","navItem","toggleIsSelected","addLinkItem","i","linkItemKey","url","isFav","updateLinkItemUrl","deleteLinkItem","toggleFav","selectNavBarList","navBarList","actions","reducer"],"sources":["C:/Users/Aaron/Documents/prograns/web/quickLinks/quick-links/src/features/navBarList/navBarSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport { newKey } from '../../utils'\r\n\r\n// =============== Slice Object ===============\r\nexport const linkItemListSlice = createSlice({\r\n    name:'navBarList',\r\n    initialState:[],\r\n    reducers:{\r\n        addNavItem:(state, action) => {\r\n            state.push({\r\n                navItemKey:newKey(),\r\n                title:action.payload,\r\n                isSelected:false,\r\n                linkItemList:[]\r\n            })\r\n            console.log('state length: '+state.length)\r\n            console.log(...state)\r\n        },\r\n        deleteNavItem:(state, action) => {\r\n            return state.filter(navItem => navItem !== action.payload)\r\n        },\r\n        toggleIsSelected:(state, action) => {\r\n\r\n        },\r\n\r\n        addLinkItem:(state, action) => {   \r\n            var navItem\r\n            for(let i=0; i<state.length; ++i){\r\n                if(state[i].isSelected){\r\n                    navItem = state[i]\r\n                    navItem.linkItemList.push({\r\n                        linkItemKey:newKey(),\r\n                        url:action.payload,\r\n                        isFav:false\r\n                    })\r\n                    break\r\n                }                \r\n            }            \r\n                // navItemKey\r\n                // title (nav bar display text)  \r\n                // sub list of urls\r\n                    // linkKey\r\n                    // url\r\n                    // isFav\r\n\r\n        },\r\n        updateLinkItemUrl:(state, action) => {\r\n\r\n        },\r\n        deleteLinkItem:(state, action) => {\r\n            //return state.\r\n        },\r\n\r\n        toggleFav:(state, action) => {\r\n\r\n        }\r\n    }\r\n})\r\n\r\n// =============== Selectors ===============\r\nexport const selectNavBarList = state => state.navBarList\r\n\r\n// =============== Exports ===============\r\nexport const {\r\n    addNavItem,\r\n    deleteNavItem,\r\n    addLinkItem,\r\n    updateLinkItemUrl,\r\n    deleteLinkItem,\r\n    toggleFav\r\n} = linkItemListSlice.actions\r\n\r\nexport default linkItemListSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,MAAT,QAAuB,aAAvB,C,CAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;EACzCG,IAAI,EAAC,YADoC;EAEzCC,YAAY,EAAC,EAF4B;EAGzCC,QAAQ,EAAC;IACLC,UAAU,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACE,IAAN,CAAW;QACPC,UAAU,EAACT,MAAM,EADV;QAEPU,KAAK,EAACH,MAAM,CAACI,OAFN;QAGPC,UAAU,EAAC,KAHJ;QAIPC,YAAY,EAAC;MAJN,CAAX;MAMAC,OAAO,CAACC,GAAR,CAAY,mBAAiBT,KAAK,CAACU,MAAnC;MACAF,OAAO,CAACC,GAAR,CAAY,GAAGT,KAAf;IACH,CAVI;IAWLW,aAAa,EAAC,CAACX,KAAD,EAAQC,MAAR,KAAmB;MAC7B,OAAOD,KAAK,CAACY,MAAN,CAAaC,OAAO,IAAIA,OAAO,KAAKZ,MAAM,CAACI,OAA3C,CAAP;IACH,CAbI;IAcLS,gBAAgB,EAAC,CAACd,KAAD,EAAQC,MAAR,KAAmB,CAEnC,CAhBI;IAkBLc,WAAW,EAAC,CAACf,KAAD,EAAQC,MAAR,KAAmB;MAC3B,IAAIY,OAAJ;;MACA,KAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChB,KAAK,CAACU,MAArB,EAA6B,EAAEM,CAA/B,EAAiC;QAC7B,IAAGhB,KAAK,CAACgB,CAAD,CAAL,CAASV,UAAZ,EAAuB;UACnBO,OAAO,GAAGb,KAAK,CAACgB,CAAD,CAAf;UACAH,OAAO,CAACN,YAAR,CAAqBL,IAArB,CAA0B;YACtBe,WAAW,EAACvB,MAAM,EADI;YAEtBwB,GAAG,EAACjB,MAAM,CAACI,OAFW;YAGtBc,KAAK,EAAC;UAHgB,CAA1B;UAKA;QACH;MACJ,CAZ0B,CAavB;MACA;MACA;MACI;MACA;MACA;;IAEX,CAtCI;IAuCLC,iBAAiB,EAAC,CAACpB,KAAD,EAAQC,MAAR,KAAmB,CAEpC,CAzCI;IA0CLoB,cAAc,EAAC,CAACrB,KAAD,EAAQC,MAAR,KAAmB,CAC9B;IACH,CA5CI;IA8CLqB,SAAS,EAAC,CAACtB,KAAD,EAAQC,MAAR,KAAmB,CAE5B;EAhDI;AAHgC,CAAD,CAArC,C,CAuDP;;AACA,OAAO,MAAMsB,gBAAgB,GAAGvB,KAAK,IAAIA,KAAK,CAACwB,UAAxC,C,CAEP;;AACA,OAAO,MAAM;EACTzB,UADS;EAETY,aAFS;EAGTI,WAHS;EAITK,iBAJS;EAKTC,cALS;EAMTC;AANS,IAOT3B,iBAAiB,CAAC8B,OAPf;AASP,eAAe9B,iBAAiB,CAAC+B,OAAjC"},"metadata":{},"sourceType":"module"}